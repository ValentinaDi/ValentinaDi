1) Прочитать про клиент-серверную архитектуру
Клиент-серверная архитектура это такая сеть, в которой есть клиент (ПК или программа), который запращивает некоторые услуги и сервер (ПК или программа),
который принимает, обрабатывает и предоставляет запращиваемые услуги. Взаимодействие происходит с помощью протоколов (например НТТР). 
Клиент посылает запрос - request, а сервер в ответ - response. 

2) Что такое HTTP и HTTPS
Протокол - набор правил для передачи данных для взаимодействия.
HTTP (HyperText Transfer Protocol) буквально переводится как "протокол передачи гипертекста", т.e. 
HTTP - это набор правил передачи данных текста, изображений, звука, видео и других мультимедиа.
HTTPS (HyperText Transfer Protocol Secure) - это защищенный протокол HTTP, необходимый для безопасной отправки и получения информации через Интернет.
Протокол HTTP предполагает использование клиент-серверной структуры передачи данных.
Запрос от клиента с помощью HTTP выглядит следующим способом: Метод URI  HTTP/Версия 
(GET / HTTP/1.1 такая стартовая строка может указывать на то, что запрашивается главная страница сайта)

3) HTTP методы
Сообщения, которые посылают клиенты получили названия HTTP запросы. 
Запросы имеют специальные методы, которые говорят серверу о том, как обрабатывать сообщение.
Существует следующие стандартизированные методы:
GET - используется для получения информации от сервера по заданному URI (URI в HTTP). 
Запросы клиентов, использующие метод GET должны получать только данные и не должны никак влиять на эти данные.
HEAD - работает точно так же, как GET, но в ответ сервер посылает только заголовки и статусную строку без тела HTTP сообщения.
POST - используется для отправки данных на сервер, например, из HTML форм, которые заполняет посетитель сайта
PUT - используется для загрузки содержимого запроса на указанный в этом же запросе URI
DELETE - удаляет указанный в URI ресурс
CONNECT - преобразует существующее соединение в тоннель
OPTIONS используется для получения параметров текущего HTTP соединения
TRACE создает петлю, благодаря которой клиент может увидеть, что происходит с сообщением на всех узлах передачи
Mетоды могут быть и другие установленные в компании, но они должны соответствовать стандарту.

4) HTTP статус коды сервера
При ответе на запрос клиента, сервер отправляет ответ (response)
Первая часть строка ответа сервера - строка состояния, содержащая три поля: версию HTTP, числовой код ответа (статус код) и текстовое описание этого кода.
Статус код сервера состоит из трех цифр от 100 и до 510.
Они делятся на следующие группы:
Информационные (100-105)
Успешные (200-226)
Перенаправление (300-307)
Ошибка клиента (400-499)
Ошибка сервера (500-510)
Некоторые из них:
200 ОК  "Все ок!" информирует об обработке переданного запроса и передаче сообщения, составленного из заголовка и описания
301 Moved Permanently (Ресурс перемещен навсегда - Документ уже не используется сервером, а ссылка перенаправляет на другую страницу)
304 Not Modified (Ресурс не изменялся - Если страница не изменилась с момента последнего обращения робота, рекомендуется выдавать этот код. Это ускорит индексирование и уменьшит трафик.)
400 Bad Request (Неверный запрос - Запрос не может быть понят сервером из-за некорректного синтаксиса), 
401 Unauthorized (Неавторизованный запрос - Для доступа к документу необходимо вводить пароль или быть зарегистрированным пользователем)
404 Not Found (Ресурс не найден - Документ не существует)
500 Internal Server Error (Внутренняя ошибка сервера)
503 Service Unavailable (Служба недоступна - Возникла ошибка из-за временной перегрузки или отключения на техническое обслуживание сервера)

5) Что такое ядро браузера 
Браузерный движок – это программа, которая работает с веб-страницами. (Проще говоря, если браузер машина, то движок браузера это то, что под капотом).
Его работа заключается в том, что бы обрабатывать загруженную из интернета HTML-страницу, информацию о форматировании (в форматах CSS, XSL и т. д.),
и преобразовывать ее код в привычное для пользователей представление.

6) Какие браузеры какие ядра используют
Blink - Google Chrome, Яндекс.Браузер, Opera, Microsoft Edge
Gecko - Mozilla Firefox
WebKit - Safari
Trident - Microsoft Internet Explorer

7) Что такое API
API (Application Programming Interface - интерфейс программирования приложений)
API - это интерфейс или способ взаимодействия одной системы с другой.
Также можно сказать что API это "контракт", который представляет программа.
Вызов функции API возможен косвенно (когда сам пользователь с помощью GUI),
либо напрямую (вызов самой системой, вызов метода другой системой, вызов метода человеком). 

8. Что такое ендпоинты. Эндпоинт (в переводе с англ. — конечная точка). Точка приема запроса на стороне сервера,
само обращение к маршруту отдельным HTTP методом. Эндпоинт выполняют конкретную задачу, принимают параметры и возвращают данные Клиенту. 

9) URL (URI, URL, URN)
URI (Uniform Resource Identifier - Унифицированный Идентификатор Ресурса) имя и адрес ресурса в сети, включает в себя URL и URN (Имя Вовы как личности и его адрес проживания)
URL (Uniform Resource Locator - Унифицированный определитель местонахождения ресурса) адрес ресурса в сети, определяет местонахождение и способ обращения к нему (адрес места жительства Вовы)
URN (Unifrorm Resource Name - Унифицированное имя ресурса) имя ресурса в сети, определяет только название ресурса, но не говорит как к нему подключиться (Имя Ваше допустим Вова)
URL чаще всего используется в Интернете для поиска ресурсов на сервере. URL буквально точно показывает нам, как определить ресурс, именно по его адресу.

10) Идемпотентные HTTP методы
При использование таких методов побочные эффекты одинаковы как в случае однократного запроса, 
так и в случае многократного повторения одного и того же запроса, 
т.е. нагрузка одинакова, но HTTP ответ от сервера может поступать каждый раз разный. 
К идемпотентным методам относятся следующие HTTP методы: GET, HEAD, PUT и DELETE. 
Так же эффектом идемпотентности обладают HTTP методы OPTIONS и TRACE.

11) Безопасные HTTP методы
Методы, которые не изменяют данные, их можно выполнять в любой последовательности (GET, HEAD, OPTIONS).

12) Иденфикация, Аутентификация, Авторизация
Иденфикация - есть ли логин в базе,
Аутентификация - сверка закрытой информации, действительно ли это тот кто зарагистрировался,
Авторизация — это предоставление определённому лицу или группе лиц прав на выполнение определённых действий.

13) Что такое IP
IP-адрес – это уникальный адрес, идентифицирующий устройство в интернете или локальной сети.
Он содержит информацию о местоположении устройства и обеспечивает его доступность для связи.
IP-адреса представляют собой набор из четырех чисел, например, 192.153.1.37. Каждое число в этом наборе принадлежит интервалу от 0 до 255. 
Таким образом, полный диапазон IP-адресации – это адреса от 0.0.0.0 до 255.255.255.255.

14) Что такое октеты в DNS
DNS (Domain Name System «система доменных имён») — это система для связывания доменных имен с соответствующими им IP-адресами.
DNS-серверы позволяют хранить данные IP-адресов соответствующих доменов, обеспечивать их кэширование и выдачу информации пользователю по запросу в сжатые сроки.
Проще можно сказать, что IP-адрес устройства это номером мобильного телефона, а DNS —  телефонная книга.
IP-адреса представляют собой набор из четырех чисел, например, 192.153.1.37. , а октетом является число разделенное точкой, в нашем примере 4 октета.

15) Что такое порт, сколько портов у Linux сервера
Порт сервера – это цифровой идентификатор программы, обслуживающей определенные интернет соединения на прикрепленном адресе (IP)
Порт представляет собой набор цифр весом не более 16 Бит, то есть это может быть произвольное число от 0 до 65535, всего – 65536 номеров. 
С помощью IP-адресов запрашиваемые данные находят путь на ваше персональное устройство. Чтобы стала возможной поддержка одного или сразу нескольких 
таких соединений и нужны порты. С их помощью сервер, на котором расположен отдаленный сайт, распознает и фиксирует ваш IP, создавая соединение «сервер/персональный компьютер». 
Проще говоря, IP адрес — это номер квартиры, Порт — это комната, в которой конкретно кто то живёт.
У Linux в качестве стандартных портов взаимодействия различных служб используется  112 портов.
Например:
Порт    Имя     Комментарий
1	tcpmux	TCP-порт службы мультиплексора
5	rje	Ввод удалённого задания
7	echo	Служба Echo
9	discard	Служба-пустышка для проверки соединения

16) Уровни OSI
OSI модель разделяет все протоколы на 7 таких уровней:
1.Физический (Physical) определяет метод передачи данных, какая среда используется, уровень напряжения, метод кодирования двоичных сигналов.
2.Канальный (Datalink) он берет на себя задачу адресации в пределах локальной сети, обнаруживает ошибки, проверяет целостность данных.
3.Сетевой (Network) этот уровень берет на себя объединения участков сети и выбор оптимального пути (т.е. маршрутизация). Каждое сетевое устройство должно иметь уникальный сетевой адрес в сети.
4.Транспортный (Transport)Этот уровень берет на себя функцию транспорта. К примеру, когда вы скачиваете файл с Интернета, файл в виде сегментов отправляется на Ваш компьютер. 
Также здесь вводятся понятия портов, которые нужны для указания назначения к конкретной службе. На этом уровне работают протоколы TCP 
5.Сеансовый (Session) Роль этого уровня в установлении, управлении и разрыве соединения между двумя хостами.
6.Представительный (Presentation) Он структурирует информацию в читабельный вид для прикладного уровня.
7.Прикладной (Application) На этом уроне работают привычные для нас приложения — e-mail, браузеры по протоколу HTTP, FTP и остальное.

17) Хедеры http запросов (Request Headers)
Обмен данными по протоколу HTTP  сопровождают HTTP-заголовки.
Они содержат описание данных и информацию, необходимую для взаимодействия между клиентом и сервером.
Существует множество заголовков запроса.
Их можно разделить на несколько групп:
Основные заголовки (General headers), например, Via (en-US),  относящиеся к сообщению в целом
Заголовки запроса (Request headers), например, User-Agent, Accept-Type, уточняющие запрос (как, например, Accept-Language), придающие контекст (как Referer), или накладывающие ограничения на условия (like If-None).
Заголовки сущности, например Content-Length (размер отправленного получателю тела объекта в байтах), относящиеся к телу сообщения. Как легко понять, они отсутствуют, если у запроса нет тела.


